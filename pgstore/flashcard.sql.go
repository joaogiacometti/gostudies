// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: flashcard.sql

package pgstore

import (
	"context"

	"github.com/google/uuid"
)

const createFlashcard = `-- name: CreateFlashcard :one
INSERT INTO flashcards (user_id, question, answer)
VALUES ($1, $2, $3)
RETURNING id
`

type CreateFlashcardParams struct {
	UserID   uuid.UUID `json:"user_id"`
	Question string    `json:"question"`
	Answer   string    `json:"answer"`
}

func (q *Queries) CreateFlashcard(ctx context.Context, arg CreateFlashcardParams) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, createFlashcard, arg.UserID, arg.Question, arg.Answer)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}

const isDuplicateFlashcard = `-- name: IsDuplicateFlashcard :one
SELECT EXISTS (
    SELECT 1 FROM flashcards
    WHERE user_id = $1 AND question = $2
)
`

type IsDuplicateFlashcardParams struct {
	UserID   uuid.UUID `json:"user_id"`
	Question string    `json:"question"`
}

func (q *Queries) IsDuplicateFlashcard(ctx context.Context, arg IsDuplicateFlashcardParams) (bool, error) {
	row := q.db.QueryRow(ctx, isDuplicateFlashcard, arg.UserID, arg.Question)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}
